/*-- Exercicio 1;
CREATE TABLE Actor (
id VARCHAR (255) NOT NULL,
nome VARCHAR (255) NOT NULL,
salary FLOAT NOT NULL,
birth_date DATE NOT NULL,
gender VARCHAR (6) NOT NULL
);
-- VARCHAR: Serve para anunciar o numero de caracteries que você permite ser inserido.
-- DATE: retorna uma data.

SHOW DATABASES;
-- Retorna o usuario schema.
SHOW TABLES;
-- Retorna as tabelas que existem.
DESCRIBE Actor;
-- Retorna todas as informações que tem dentro da tabela.

-- EXERCICIO 2.
-- A- Criando Gloria Pires
-- B- Criando com o mesmo ID, não deu nenhum erro!
-- C- A contagem de coluna não corresponde a contagem de valores.
-- D- Campo nome não tem um valor padrão.
-- E- Valor de data incorreto: '1950' para a coluna 'birth_date' na linha 1

INSERT INTO Actor (id, nome, salary, birth_date, gender)
VALUES(
  "002", 
  "Glória Pires",
  120000,
  "1963-08-23", 
  "female"
);

-- EXERCICIOM 3 
-- a) Escreva uma query que retorne todas as informações das atrizes
SELECT * from Actor WHERE gender = "female";

-- b) Escreva uma query que retorne o salário do ator com o nome Tony Ramos
SELECT salary FROM Actor WHERE nome = "Tony Ramos"; 

-- c) Escreva uma query que retorne todas as informações que tenham o gender com o valor "invalid". Explique o resultado.
-- R: Não tem nenhum como invalido então retorna 0 linhas.
SELECT * FROM Actor WHERE gender = "invalid";

-- d) Escreva uma query que retorne o id, nome e salário de todos que tenham o salário com o valor máximo de R$500.000
SELECT id, nome, salary FROM Actor WHERE salary <=500000;

-- e) R: Coluna desconhecida 'nome' na 'lista de campos'
SELECT id, nome from Actor WHERE id = "002";

-- Exercicio 4

-- a) Explique com as suas palavras a query acima
-- R: Retorna linhas que começa com A ou J que seja maior que 300000

-- b) Escreva uma query com os atores que não comecem com a letra "A" e tenham o salário maior do que R$350.000,00
SELECT * FROM Actor WHERE (nome NOT LIKE "A%" ) AND salary >= 350000 ;

-- c) Escreva uma query com os atores que possuam "G" ou "g" em qualquer parte do nome. 
SELECT * FROM Actor WHERE nome LIKE "%G%" OR nome LIKE "%g%";

-- d) Escreva uma query com os atores que tenham a letra "a" ou "A" ou "g" ou "G" no nome e o salário entre R$350.000,00 e R$900.000,00
SELECT * FROM Actor WHERE (nome LIKE "%a%" OR nome LIKE "%A%" OR nome LIKE "%G%" OR nome LIKE "%g%") 
AND salary BETWEEN 350000 AND 900000;


-- Exercicio 5
-- a) *Escreva a query que cria essa tabela. Para sinopse, utilize o tipo
-- `TEXT`, pesquise sobre ele se precisar. Explique a query resumidamente.*

CREATE TABLE Filmes (
id VARCHAR (255) PRIMARY KEY,
nome VARCHAR (200)NOT NULL UNIQUE,
sinopse TEXT NOT NULL,
lançamento DATE NOT NULL, 
validação INT NOT NULL
);

INSERT INTO Filmes (id, nome, sinopse, lançamento, validação)
VALUES( 
"004", 
"Venom", 
"O jornalista Eddie Brock desenvolve força e poder sobre-humanos quando seu corpo se funde com o alienígena Venom. Dominado pela raiva, Venom tenta controlar as novas e perigosas habilidades de Eddie.",
 "2018-08-04",
 10
 );

 -- Exercicio 6
 
 -- a) Retorne o id, título e avaliação a partir de um id específico;
 SELECT id, nome, validação FROM Filmes WHERE id = 004 ;
 
 -- b) Retorne um filme a partir de um nome específico;
 SELECT * FROM Filmes WHERE nome = "Doce de Mãe" ;
 
 -- c) Retorne o id, título e sinopse dos filmes com avaliação mínima de 7;
 SELECT id, nome, sinopse FROM Filmes WHERE validação >= 7 ;

-- Exercicio 7

-- a) Retorna um filme cujo título contenha a palavra vida
SELECT * FROM Filmes WHERE nome LIKE "%vida%";

-- b) Realize a pesquisa de um filme, ou seja: pesquise se o termo de busca está contido no título ou na sinopse.
--  Utilize qualquer TERMO DE BUSCA para exemplificar.
SELECT * FROM Filmes WHERE nome LIKE "%vida%" OR sinopse LIKE "%vida%";

-- c) Procure por todos os filmes que já tenham lançado;
SELECT * FROM Filmes WHERE lançamento < "2022-11-09";

-- d) Procure por algum filme que já tenha lançado, com o termo de busca contido
-- no título ou sinopse e com a avaliação maior do que 7. 
SELECT * FROM Filmes WHERE 
lançamento < "2022-11-09" AND
nome LIKE "%A%" OR sinopse LIKE "%V%" AND 
validação > 7;


-- ESSES SÃO TESTES QUE FIZ PARA APRENDIZADO PARTICULAR MEU.
-- SET SQL_SAFE_UPDATES=0;

-- DELETE FROM Actor WHERE id = 001 ;
SELECT * FROM Filmes;
  */